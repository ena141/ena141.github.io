<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>some notes</title>
    <link href="/2024/05/11/Programming%20Languages/"/>
    <url>/2024/05/11/Programming%20Languages/</url>
    
    <content type="html"><![CDATA[<h2 id="Programming-Languages-Tools"><a href="#Programming-Languages-Tools" class="headerlink" title="Programming Languages &#x2F; Tools"></a>Programming Languages &#x2F; Tools</h2><h3 id="GO"><a href="#GO" class="headerlink" title="GO"></a>GO</h3><h3 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h3><h2 id="Container"><a href="#Container" class="headerlink" title="Container"></a>Container</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><h3 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h3><h2 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h2><h3 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h3><p>Object-Relational Mapping (ORM) is a technique that lets you query and manipulate data from a database using an object-oriented paradigm. When talking about ORM, most people are referring to a library that implements the Object-Relational Mapping technique, hence the phrase “an ORM”.</p><p>Some famous ORM for different programming languages</p><ul><li><strong>Python</strong>：Django ORM (Django Framework)</li><li><strong>Ruby</strong>：ActiveRecord (Ruby on Rails Framework)</li><li><strong>JavaScript&#x2F;Node.js</strong>：TypeORM, Mongoose (针对MongoDB的ODM)</li><li><strong>Go</strong>：GORM, Beego ORM</li></ul><p>**Pros: ** enhance development efficiency, especially when handling complex database operations and large projects</p><p><strong>Cons:</strong>  may also cause performance overhead and inflexibility in some complex queries. </p><h2 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h2><h3 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h3><p><code>HTTPS = HTTP + SSL/TLS</code></p><h3 id="TLS-SSL"><a href="#TLS-SSL" class="headerlink" title="TLS &#x2F; SSL"></a>TLS &#x2F; SSL</h3><p><strong>Secure Sockets Layer (SSL)</strong> and <strong>Transport Layer Security (TLS)</strong> are cryptographic protocols used to provide security in internet communications. These protocols encrypt the data that is transmitted over the web, so anyone who tries to intercept packets will not be able to interpret the data. One difference that is important to know is that SSL is now <em>deprecated</em> due to security flaws, and most modern web browsers <em>no longer support it</em>. But <strong>TLS</strong> is still secure and widely supported, so preferably use TLS.</p><h2 id="INFRA"><a href="#INFRA" class="headerlink" title="INFRA"></a>INFRA</h2><h3 id="Load-Balancing-Proxy"><a href="#Load-Balancing-Proxy" class="headerlink" title="Load Balancing &#x2F; Proxy"></a>Load Balancing &#x2F; Proxy</h3><p>Load Balancer acts as the <strong>traffic cop</strong> sitting in front of your servers and routing client requests across all servers capable of fulfilling those requests in a manner that maximizes speed and capacity utilization and ensures that no one server is overworked. If one of the servers goes down, the load balancer redirects traffic to the remaining online servers.</p><blockquote><p>负载均衡器（load balancer）和代理（proxy）两个术语经常无差别混用</p><p>严格地讲并非所有代理都是负载均衡器，但绝大多数代理都有负载均衡功能</p></blockquote><h4 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h4><ul><li><p><strong>服务发现</strong>：系统中哪些后端可用、它们的地址是什么（负载均衡器如何能够联系上它们）</p></li><li><p><strong>健康检查</strong>：哪些后端是健康的，可以正常接收请求</p></li><li><p><strong>负载均衡</strong>：用哪种算法来均衡请求至健康的后端</p></li><li><p>Distributes client requests or network load efficiently across multiple servers</p></li><li><p>Ensures high availability and reliability by sending requests only to servers that are online</p></li><li><p>Provides the flexibility to add or subtract servers as demand dictates</p></li></ul><img src="img/Programming Languages/without_load_balancing_diagram.png" alt="Without load balancing" style="zoom:25%;" /><img src="img/Programming Languages/with_load_balancing_diagram.png" alt="With load balancing" style="zoom:25%;" /><h4 id="Load-Balancing-Algorithms"><a href="#Load-Balancing-Algorithms" class="headerlink" title="Load Balancing Algorithms"></a>Load Balancing Algorithms</h4><p><strong>Static load balancing</strong></p><p>Static load balancing algorithms follow fixed rules and are independent of the current server state. The following are examples of static load balancing.</p><ul><li><strong>Round Robin</strong> – Requests are distributed across the group of servers sequentially.</li><li><strong>Hash</strong> – Distributes requests based on a key you define, such as the client IP address or<br>the request URL.</li><li><strong>IP Hash</strong> – The IP address of the client is used to determine which server receives the request.</li></ul><p><strong>Dynamic load balancing</strong> </p><p>Dynamic load balancing algorithms examine the current state of the servers before distributing traffic. The following are some examples of dynamic load balancing algorithms.</p><ul><li><strong>Least Connections</strong> – A new request is sent to the server with the fewest current connections to clients. The relative computing capacity of each server is factored into determining which one has the least connections.</li><li><strong>Least Time</strong> – Sends requests to the server selected by a formula that combines the<br>fastest response time and fewest active connections.</li></ul><h4 id="Types-of-Load-Balancing"><a href="#Types-of-Load-Balancing" class="headerlink" title="Types of Load Balancing"></a>Types of Load Balancing</h4><p><strong>Application load balancing</strong></p><p>Complex modern applications have several server farms with multiple servers dedicated to a single application function. Application load balancers look at the request content, such as HTTP headers or SSL session IDs, to redirect traffic. </p><p><strong>Network load balancing</strong></p><p>Network load balancers examine IP addresses and other network information to redirect traffic optimally. They track the source of the application traffic and can assign a static IP address to several servers. Network load balancers use the static and dynamic load balancing algorithms described earlier to balance server load.</p><p><strong>Global server load balancing</strong></p><p>Global server load balancing occurs across several geographically distributed servers. For example, companies can have servers in multiple data centers, in different countries, and in third-party cloud providers around the globe.</p><p><strong>DNS load balancing</strong></p><p>In DNS load balancing, you configure your domain to route network requests across a pool of resources on your domain. A domain can correspond to a website, a mail system, a print server, or another service that is made accessible through the internet. DNS load balancing is helpful for maintaining application availability and balancing network traffic across a globally distributed pool of resources.</p><h4 id="L4-L7-Load-Balancing"><a href="#L4-L7-Load-Balancing" class="headerlink" title="L4 &#x2F; L7 Load Balancing"></a>L4 &#x2F; L7 Load Balancing</h4><blockquote><p>现在，几乎所有的大型分布式系统都是在公网流量入口使用 L4&#x2F;L7 两级负载均衡架构。</p></blockquote><h4 id="L4"><a href="#L4" class="headerlink" title="L4"></a>L4</h4><p><strong>数据链路层负载均衡</strong></p><p>数据链路层负载均衡所做的工作，就是修改请求的数据帧中的 MAC 目标地址，让原本发送给负载均衡器请求的数据帧，被二层交换机转发至服务器集群中对应的服务器，这样真实的服务器就获得了一个原本目标并不是发送给它的数据帧。</p><p><strong>网络层负载均衡</strong></p><p><em><strong>隧道模式</strong></em></p><p>保持源数据包不变，新建一个 IP 数据包，将原来的 IP 数据包整体放进新 IP 数据包的 Payload 内，再通过三层交换机发送出去，真实服务器收到包之后，有一个对应拆包的机制，把负载均衡器自动添加的那层 Header 删掉，解析出 Payload 内部的 IP 数据包再进行正常处理。</p><p><em><strong>NAT 模式</strong></em></p><p>IP 数据包的另外一种改写方式是直接改变 IP 数据包的 Header 内的目的地（Destination address）地址（改为真实服务器的地址），修改之后原本用户发送给负载均衡器的数据包会被三层交换机转发至真实服务器的网卡上。当应答包回来的时候，负载均衡器再做相反的转换。NAT 模式的缺陷是，因为负载均衡器代表整个服务集群接收&#x2F;应答，当流量压力比较大的时候，整个系统的瓶颈就很容易出现在负载均衡器上。</p><p><strong>高可用设计</strong></p><p><strong>基于集群的一致性哈希容错和可扩展设计方案</strong></p><p><img src="https://www.thebyte.com.cn/assets/balancer-ha-2-D2v5Za9L.svg" alt="img"></p><ol><li>多个边缘路由器以相同的 BGP 权重通告所有 Anycast VIP，通过 ECMP（Equal-cost, Multi-path routing，等价多路由）保证每个 flow 的所有包都会到达同一个边缘路由器。</li><li>多个四层负载均起以相同的 BGP 权重向所有的边缘路由器通告所有的 VIP 继续使用 ECMP 的方式为相同 flow 的包选择相同的四层负载均衡器。</li><li>每个四层负载均衡器实例会做部分连接跟踪（conntrack）工作，然后使用一致性哈希为每个 flow 选择 一个后端。通过 GRE 封装将包从负载均衡器发送到后端。</li><li>然后使用三角传输模式将应答包从后端直接发送到边缘路由器，最后到客户端。</li></ol><h4 id="L7"><a href="#L7" class="headerlink" title="L7"></a>L7</h4><p>L4负载均衡的工作模式都属于「转发」，客户端与响应请求的真实服务器维持着同一条 TCP 通道，但七层负载均衡模式就无法再转发了。</p><p>七层指的是类似 HTTP 这样的应用层协议，那就要把 TCP 数据传送到用户态中的程序处理，之后再用代理的方式新建一个请求到真实服务器。因为七层负载均衡具备检测应用层流量的能力，所以做出更多、更明智的决策。</p><p><strong>使用Nginx进行反向代理</strong></p><p><strong>Buffer&#x2F;Cache 缓存缓冲</strong></p><p>开启代理缓冲后 Nginx 可以用较快的速度尽可能将响应体读取并缓冲到本地内存或磁盘中，然后同时根据客户端的网络质量以合适的网速将响应传递给客户端。 这样既解决了 server 端连接过多的问题也保证了能持续稳定地向客户端传递响应。</p><p><strong>现代化的网关方案</strong></p><p>随着微服务架构、容器编排调度等技术的崛起，现代分布式系统已经越来越动态，这就意味着通过静态文件配置方式早已过时。作为分布式系统的入口，七层负载均衡（代理）就需要转换角色，不仅仅作为一个代理，而是要承担提供更多现代化的功能。</p><p>把这些功能统一前移某一层独立支持，实现 API Gateway as a Service，让各个服务直接接入，在管理平台上管理，可视化配置等等，这样就实现了一个全局的视图统一管理这些功能。而这就是七层负载均衡的升级 —— <strong>网关（API Gateway）</strong>。</p><p><strong>实现网关系统的优势</strong></p><ul><li><strong>协议支持</strong> 现代网关系统正在显式添加对更多协议的支持。负载均衡器对应用层协议了解的越多， 就可以处理越多更复杂的事情，包括观测输出、高级负载均衡和路由等等。譬如云原生网关的典型代表 Envoy 显式支持如下七层协议的解析和路由：HTTP&#x2F;1、HTTP&#x2F;2、gRPC、Redis、MongoDB、DynamoDB。</li><li><strong>动态配置</strong>： 服务管理的动态配置包括路由、上游服务（Upstream）、SSL证书、消费者等等，数据的替换和更新不会产生任何中断，从而将线上流量的影响降低到最低。</li><li><strong>流量治理</strong>：很多微服务架构中，流量治理都需要在七层中进行，譬如超时、重试、限速、熔断、流量镜像、缓存等等。现代网关系统在服务以及流量的管理上可对多业务进行收敛统一处理，降低多套网关的运维成本。</li><li><strong>可观测性</strong>：互联网快速发展的今天，基础设施与应用的部署构建都发生了极大变化，特别是基于分布式、微服务的体系架构，传统的监控方式已经无法适应云原生的场景。服务治理的可观测性输出是网关系统提供的最重要的特性。系统度量、分布式跟踪以及自定义日志等功能现在几乎是七层负载均衡解决方案的标配。需要指出的是，丰富的可观测数据并不是没有代价的，负载均衡器需要做一些额外的工作才能产生这些数据。但是，这些数据带来的收益要远远大于为产生它们而增加的那点性能损失。</li><li><strong>可扩展性</strong>：例如典型网关 OpenResty，通过编写可插拔的插件能够轻松地对网关系统实现各种流量处理以及各类自定义功能，譬如流量限速、日志记录、安全检测、故障注入等等。</li><li><strong>高可用以及无状态设计</strong>：现代网关系统不仅提供数据面实现，还提供控制面实现，二者目标都在朝向无状态设计，可以轻松地实现水平扩展。网关架构整体上也默认高可用，不存在单点故障。</li></ul><h3 id="Service-Mesh"><a href="#Service-Mesh" class="headerlink" title="Service Mesh"></a>Service Mesh</h3><h2 id="VCS"><a href="#VCS" class="headerlink" title="VCS"></a>VCS</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><h4 id="some-useful-command"><a href="#some-useful-command" class="headerlink" title="some useful command"></a><strong>some useful command</strong></h4><h4 id="基本操作："><a href="#基本操作：" class="headerlink" title="基本操作："></a>基本操作：</h4><ol><li><p><strong>git init</strong>：在当前目录下初始化一个新的 Git 仓库。</p></li><li><p>**git clone <url>**：克隆一个远程仓库到本地。</p></li><li><p>**git add <file>**：将文件添加到暂存区。</p><blockquote><p>添加所有的可以 git add .</p></blockquote></li><li><p>**git commit -m “message”**：提交暂存区的更改到仓库并添加提交消息。</p></li><li><p><strong>git status</strong>：查看工作区和暂存区的状态。</p></li><li><p><strong>git diff</strong>：查看工作区与暂存区的差异。</p></li><li><p><strong>git log</strong>：查看提交日志。</p></li></ol><h4 id="分支管理："><a href="#分支管理：" class="headerlink" title="分支管理："></a>分支管理：</h4><ol><li><strong>git branch</strong>：列出本地分支。</li><li>**git branch <branch_name>**：创建新分支。</li><li>**git checkout <branch_name>**：切换到指定分支。</li><li>**git merge <branch_name>**：将指定分支合并到当前分支。</li><li><strong>git pull</strong>：从远程仓库拉取最新代码并合并到当前分支。</li><li>**git push origin <branch_name>**：将本地分支推送到远程仓库。</li></ol><h4 id="远程仓库："><a href="#远程仓库：" class="headerlink" title="远程仓库："></a>远程仓库：</h4><ol><li><strong>git remote -v</strong>：查看远程仓库的详细信息。</li><li>**git remote add <name> <url>**：添加远程仓库。</li><li>**git fetch <remote>**：从远程仓库获取最新数据。</li><li>**git push <remote> <branch>**：将本地分支推送到远程仓库。</li><li>**git pull <remote> <branch>**：从远程仓库拉取最新数据并合并到当前分支。</li></ol><h4 id="撤销与重置："><a href="#撤销与重置：" class="headerlink" title="撤销与重置："></a>撤销与重置：</h4><ol><li>**git reset HEAD <file>**：取消暂存文件。</li><li>**git checkout – <file>**：撤销对文件的修改。</li><li>**git revert <commit_id>**：创建一个新的提交来撤销指定提交的更改。</li><li>**git reset –hard <commit_id>**：重置当前分支的 HEAD 到指定提交，并丢弃之后的所有更改。</li></ol><h4 id="其他常用命令："><a href="#其他常用命令：" class="headerlink" title="其他常用命令："></a>其他常用命令：</h4><ol><li>**git config –global user.name “name”**：设置全局用户名称。</li><li>**git config –global user.email “email”**：设置全局用户邮箱。</li><li><strong>git stash</strong>：将当前工作区的修改保存到一个临时存储区。</li><li>**git cherry-pick <commit_id>**：选择一个提交并将其应用到当前分支上。</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Learning notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWS的一些笔记</title>
    <link href="/2024/05/03/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/05/03/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p><strong>Support Plan</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224111535733.png" alt="image-20240224111535733"></p><p><strong>Compute</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224112604274.png" alt="image-20240224112604274"></p><p><strong>Network</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224112826127.png" alt="image-20240224112826127"></p><p><strong>Database</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224113049307.png" alt="image-20240224113049307"></p><p><strong>Provisioning</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224113300080.png" alt="image-20240224113300080"></p><p><strong>Storage</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224113420783.png" alt="image-20240224113420783"></p><p><strong>Business Centric Service</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224113600488.png" alt="image-20240224113600488"></p><p><strong>Enterprise Integration</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224113754298.png" alt="image-20240224113754298"></p><p><strong>Logging Service</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224113825213.png" alt="image-20240224113825213"></p><p><strong>SNS &amp; SQS</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224114355565.png" alt="image-20240224114355565"></p><p><strong>SNS &amp; SES</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224114622117.png" alt="image-20240224114622117"></p><p>Artifact -&gt; 权威的安全认证</p><p>Inspector -&gt; 生成EC2的安全报告文件</p><p><strong>Inspector &amp; Trusted Advisor</strong></p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224114918056.png" alt="image-20240224114918056"></p><p><strong>AWS Security Hub</strong></p><p>AWS Security Hub is a cloud security posture management service that performs automated, continuous security best practice checks against your AWS resources. Security Hub aggregates your security alerts (i.e. findings) from various AWS services and partner products in a standardized format so that you can more easily take action on them.</p><p><strong>AWS Config</strong></p><p>AWS Config is a fully managed service that provides you with an AWS resource inventory, configuration history, and configuration change notifications to enable security and governance. The AWS Config Rules feature enables you to create rules that automatically check the configuration of AWS resources recorded by AWS Config.</p><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240224160815040.png" alt="image-20240224160815040"></p><p>ECS 托管的容器服务，没有全部控制权</p><p>EC2 有full control</p><hr><p>Which AWS service or feature allows a user to establish a dedicated network connection between a company’s on-premises data center and the AWS Cloud?</p><ul><li><strong>A. AWS Direct Connect</strong></li><li>B. VPC peering</li><li>C. AWS VPN</li><li>D. Amazon Route 53</li></ul><p>AWS Direct Connect establish a dedicated network connection </p><p>AWS VPN provides a secure, encrypted connection between on-premises networks and AWS VPCs <strong>over the internet</strong></p><hr><p>A company wants to protect its AWS Cloud information, systems, and assets while performing risk assessment and mitigation tasks.<br>Which pillar of the AWS Well-Architected Framework is supported by these goals?</p><ul><li>A. Reliability</li><li><strong>B. Security</strong></li><li>C. Operational excellence</li><li>D. Performance efficiency</li></ul><p>Operational Excellence: Focuses on operational practices that enable efficient management and operation of systems. It involves continuous improvement, monitoring, incident response, and evolving procedures over time.</p><p>Security: Focuses on protecting information, systems, and assets. It involves implementing best practices for identity and access management, data protection, and risk assessment and mitigation.</p><p>Reliability: Focuses on the ability of a system to recover from failures and meet customer expectations. It involves implementing best practices for resiliency, fault tolerance, and disaster recovery.</p><p>Performance Efficiency: Focuses on using resources efficiently to maintain good performance. It involves optimizing workloads, selecting the right resources, and monitoring performance.</p><p>Cost Optimization: Focuses on avoiding unnecessary costs and ensuring that resources are used efficiently. It involves optimizing costs, understanding pricing models, and using resources effectively.</p><hr><p>A company needs to block SQL injection attacks.<br>Which AWS service or feature can meet this requirement?</p><ul><li><strong>A. AWS WAF</strong></li><li>B. AWS Shield</li><li>C. Network ACLs</li><li>D. Security groups</li></ul><p>A. AWS WAF (Web Application Firewall): A web application firewall that allows users to create custom rules to filter and monitor HTTP or HTTPS requests to a web application. It helps protect against common web exploits, including SQL injection attacks, by allowing the blocking or rate-limiting of malicious requests. </p><p>各种网络层攻击</p><p>B. AWS Shield: A managed Distributed Denial of Service (DDoS) protection service. While it helps protect against DDoS attacks, it is not specifically designed for blocking SQL injection attacks.</p><p>主要是DDoS</p><hr><p>Which AWS service gives users the ability to discover and protect sensitive data that is stored in Amazon S3 buckets?</p><ul><li>A. Amazon Macie</li><li>B. Amazon Detective</li><li>C. Amazon GuardDuty</li><li>D. AWS IAM Access Analyzer</li></ul><p>Amazon Macie: A security service that uses machine learning to automatically discover, classify, and protect sensitive data, such as personally identifiable information (PII), in Amazon S3.</p><p>Amazon Detective: A security service that helps users investigate and identify the root cause of potential security issues or suspicious activities.</p><p>Amazon GuardDuty: A threat detection service that continuously monitors for malicious activity and unauthorized behavior to protect AWS accounts and workloads.</p><p>AWS IAM Access Analyzer: Helps users identify resources that can be accessed by external principals (such as IAM roles or resource-based policies) and provides findings to help ensure resources are shared securely.</p><h2 id="Advantages-of-Cloud-Compute"><a href="#Advantages-of-Cloud-Compute" class="headerlink" title="Advantages of Cloud Compute"></a>Advantages of Cloud Compute</h2><ul><li><strong>Trade fixed expense for variable expense</strong> – Instead of having to invest heavily in data centers and servers before you know how you’re going to use them, you can pay only when you consume computing resources, and pay only for how much you consume.</li><li><strong>Benefit from massive economies of scale</strong> – By using cloud computing, you can achieve a lower variable cost than you can get on your own. Because usage from hundreds of thousands of customers is aggregated in the cloud, providers such as AWS can achieve higher economies of scale, which translates into lower pay as-you-go prices.</li><li><strong>Stop guessing capacity</strong> – Eliminate guessing on your infrastructure capacity needs. When you make a capacity decision prior to deploying an application, you often end up either sitting on expensive idle resources or dealing with limited capacity. With cloud computing, these problems go away. You can access as much or as little capacity as you need, and scale up and down as required with only a few minutes’ notice.</li><li><strong>Increase speed and agility</strong> – In a cloud computing environment, new IT resources are only a click away, which means that you reduce the time to make those resources available to your developers from weeks to just minutes. This results in a dramatic increase in agility for the organization, since the cost and time it takes to experiment and develop is significantly lower.</li><li><strong>Stop spending money running and maintaining data centers</strong> – Focus on projects that differentiate your business, not the infrastructure. Cloud computing lets you focus on your own customers, rather than on the heavy lifting of racking, stacking, and powering servers.</li><li><strong>Go global in minutes</strong> – Easily deploy your application in multiple regions around the world with just a few clicks. This means you can provide lower latency and a better experience for your customers at minimal cost.</li></ul><h2 id="AWS-Well-Architected-Framework"><a href="#AWS-Well-Architected-Framework" class="headerlink" title="AWS Well-Architected Framework"></a>AWS Well-Architected Framework</h2><h3 id="Six-pillars-of-the-framework"><a href="#Six-pillars-of-the-framework" class="headerlink" title="Six pillars of the framework"></a>Six pillars of the framework</h3><ul><li><strong>operational excellence</strong></li><li><strong>security</strong></li><li><strong>reliability</strong></li><li><strong>performance efficiency</strong></li><li><strong>cost optimization</strong></li><li><strong>sustainability</strong></li></ul><h3 id="Operational-excellence"><a href="#Operational-excellence" class="headerlink" title="Operational excellence"></a>Operational excellence</h3><p>The Operational Excellence pillar includes the ability to support development and run workloads effectively, gain insight into their operations, and to continuously improve supporting processes and procedures to deliver business value.</p><h3 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h3><p>The Security pillar encompasses the ability to protect data, systems, and assets to take advantage of cloud technologies to improve your security.</p><h3 id="Reliability"><a href="#Reliability" class="headerlink" title="Reliability"></a>Reliability</h3><p>The Reliability pillar encompasses the ability of a workload to perform its intended function correctly and consistently when it’s expected to. This includes the ability to operate and test the workload through its total lifecycle. This paper provides in-depth, best practice guidance for implementing reliable workloads on AWS.</p><h3 id="Performance-efficiency"><a href="#Performance-efficiency" class="headerlink" title="Performance efficiency"></a>Performance efficiency</h3><p>The Performance Efficiency pillar includes the ability to use computing resources efficiently to meet system requirements, and to maintain that efficiency as demand changes and technologies evolve.</p><h3 id="Cost-optimization"><a href="#Cost-optimization" class="headerlink" title="Cost optimization"></a>Cost optimization</h3><p>The Cost Optimization pillar includes the ability to run systems to deliver business value at the lowest price point.</p><h3 id="Sustainability"><a href="#Sustainability" class="headerlink" title="Sustainability"></a>Sustainability</h3><p>The Sustainability pillar focuses on environmental impacts, especially energy consumption and efficiency, since they are important levers for architects to inform direct action to reduce resource usage.</p><h2 id="AWS-Cloud-Adoption-Framework-AWS-CAF"><a href="#AWS-Cloud-Adoption-Framework-AWS-CAF" class="headerlink" title="AWS Cloud Adoption Framework (AWS CAF)"></a>AWS Cloud Adoption Framework (AWS CAF)</h2><ul><li><strong>业务视角</strong>有助于确保您的云投资能够加快实现数字化转型雄心和业务成果。常见的利益攸关方包括首席执行官 (CEO)、首席财务官 (CFO)、首席运营官 (COO)、首席信息官 (CIO) 和首席技术官 (CTO)。</li><li><strong>人员视角</strong>充当了技术与业务之间的桥梁，可加速云之旅以帮助企业更快地打造持续增长和学习的文化，使变革成为业务常态，并将重点放在文化、组织结构、领导力和劳动力上。常见的利益攸关方包括 CIO、COO、CTO、云主管以及跨职能部门和企业内的领导者。</li><li><strong>治理视角</strong>可帮助您协调云计划，最大限度地提高组织收益并最大限度地降低与转型相关的风险。常见的利益攸关方包括首席转型官、CIO、CTO、CFO、首席数据官 (CDO) 和首席风险官 (CRO)。</li><li><strong>平台视角</strong>可帮助您构建企业级、可扩展的混合云平台，实现现有工作负载的现代化，并实施新的云原生解决方案。常见的利益攸关方包括 CTO、技术负责人、架构师和工程师。</li><li><strong>安全视角</strong>可帮助您实现数据和云工作负载的机密性、完整性和可用性。常见的利益攸关方包括首席信息安全干事 (CISO)、首席合规官 (CCO)、内部审计主管以及安全架构师和工程师。</li><li><strong>运营视角</strong>有助于确保云服务的交付水平能够满足您的业务需求。常见的利益攸关方包括基础设施和运营负责人、站点可靠性工程师和信息技术服务经理。</li></ul><h2 id="Managed-service"><a href="#Managed-service" class="headerlink" title="Managed service"></a>Managed service</h2><p>Amazon RDS、Amazon Elastic Container Service (Amazon ECS)、Amazon Elastic Kubernetes Service (Amazon EKS)、 Amazon DynamoDB …</p><h2 id="Security-1"><a href="#Security-1" class="headerlink" title="Security"></a>Security</h2><h3 id="Identity-and-Access-Management-IAM"><a href="#Identity-and-Access-Management-IAM" class="headerlink" title="Identity and Access Management(IAM)"></a>Identity and Access Management(IAM)</h3><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240220205055568.png" alt="image-20240220205055568"></p><h3 id="AWS-Artifact"><a href="#AWS-Artifact" class="headerlink" title="AWS Artifact"></a>AWS Artifact</h3><p>AWS Artifact is your go-to, central resource for compliance-related information that matters to you. It provides on-demand access to AWS security and compliance reports and select online agreements. </p><p>（合规性）</p><h3 id="Detect-Protect"><a href="#Detect-Protect" class="headerlink" title="Detect &amp; Protect"></a>Detect &amp; Protect</h3><h4 id="Amazon-Inspector"><a href="#Amazon-Inspector" class="headerlink" title="Amazon Inspector"></a>Amazon Inspector</h4><p>Amazon Inspector is a new automated vulnerability management service that continually scans AWS workloads for software vulnerabilities and unintended network exposure.</p><h4 id="Amazon-GuardDuty"><a href="#Amazon-GuardDuty" class="headerlink" title="Amazon GuardDuty"></a>Amazon GuardDuty</h4><p>Amazon GuardDuty is a threat detection service that continuously monitors for malicious activity and anomalous behavior to protect your AWS accounts, workloads, Kubernetes clusters, and data stored in Amazon Simple Storage Service (Amazon S3).</p><h4 id="Amazon-Macie"><a href="#Amazon-Macie" class="headerlink" title="Amazon Macie"></a>Amazon Macie</h4><p>Amazon Macie is a fully managed <strong>data security and data privacy service</strong> that uses inventory evaluations, machine learning, and pattern matching to discover sensitive data and accessibility in your Amazon S3 environment.</p><h4 id="Amazon-Detective"><a href="#Amazon-Detective" class="headerlink" title="Amazon Detective"></a>Amazon Detective</h4><p>Amazon Detective makes it easy to <em>analyze, investigate, and quickly identify</em> the root cause of potential security issues or suspicious activities.</p><h4 id="AWS-Shield"><a href="#AWS-Shield" class="headerlink" title="AWS Shield"></a>AWS Shield</h4><p>AWS Shield is a managed <strong>Distributed Denial of Service (DDoS) protection service</strong> that safeguards web applications running on AWS. AWS Shield provides you with always-on detection and automatic inline mitigations that minimize application downtime and latency</p><blockquote><p>Standard version Work on network &amp; transport layer</p><p>Advanced version include AWS WAF</p></blockquote><h4 id="AWS-WAF"><a href="#AWS-WAF" class="headerlink" title="AWS WAF"></a>AWS WAF</h4><p>AWS WAF is a web application ﬁrewall that helps protect your web applications or APIs against common web exploits and bots that may affect availability, compromise security, or consume excessive resources. AWS WAF gives you control over how traffic reaches your applications by enabling you to create security rules that control bot traffic and block common attack patterns, such as <em>SQL injection or cross-site scripting.</em></p><blockquote><p>Work on application layer</p></blockquote><h4 id="AWS-Security-Hub"><a href="#AWS-Security-Hub" class="headerlink" title="AWS Security Hub"></a>AWS Security Hub</h4><p>AWS Security Hub is a cloud security posture management service that performs automated, continuous security best practice checks against your AWS resources.</p><ul><li><strong>threat detections -&gt; <em>GuardDuty</em></strong></li><li><strong>vulnerabilities -&gt; <em>Amazon Inspector</em></strong></li><li><strong>sensitive data classifications -&gt; <em>Amazon Macie</em></strong></li><li><strong>resource configuration issues -&gt; <em>AWS Config</em></strong></li><li><strong>DDoS -&gt; <em>AWS Shield</em></strong></li><li><strong>SQL injection… -&gt; <em>AWS WAF</em></strong></li><li>AWS Partner Network products.</li></ul><h3 id="Key-Access"><a href="#Key-Access" class="headerlink" title="Key &amp; Access"></a>Key &amp; Access</h3><h4 id="AWS-Secrets-Manager"><a href="#AWS-Secrets-Manager" class="headerlink" title="AWS Secrets Manager"></a>AWS Secrets Manager</h4><p>AWS Secrets Manager helps you protect secrets needed to access your applications, services, and IT resources. The service enables you to easily <em>rotate, manage, and retrieve</em> <strong>database credentials, API keys, and other secrets</strong> throughout their lifecycle.</p><h4 id="AWS-Key-Management-Service"><a href="#AWS-Key-Management-Service" class="headerlink" title="AWS Key Management Service"></a>AWS Key Management Service</h4><p>AWS Key Management Service (AWS KMS) makes it easy for you to create and manage cryptographic keys and control their use across a wide range of AWS services and in your applications.</p><blockquote><p>Create and control keys used to <em><strong>encrypt or digitally sign the data</strong></em> </p></blockquote><h2 id="AWS-Global-Infrastructure"><a href="#AWS-Global-Infrastructure" class="headerlink" title="AWS Global Infrastructure"></a>AWS Global Infrastructure</h2><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240226225248261.png" alt="image-20240226225248261"></p><h2 id="Management"><a href="#Management" class="headerlink" title="Management"></a>Management</h2><h3 id="Access"><a href="#Access" class="headerlink" title="Access"></a>Access</h3><ul><li>Programming access (API, CLI, SDK)</li><li>AWS Management Console</li><li>Infrastructure as Code (IaC)</li></ul><h3 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h3><p><img src="/img/AWS%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AC%94%E8%AE%B0/image-20240225230919540.png" alt="image-20240225230919540"></p>]]></content>
    
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>Cloud</tag>
      
      <tag>Certificate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AWS Basic</title>
    <link href="/2024/04/29/AWS-Basic/"/>
    <url>/2024/04/29/AWS-Basic/</url>
    
    <content type="html"><![CDATA[<h2 id="Cloud-Computing"><a href="#Cloud-Computing" class="headerlink" title="Cloud Computing ?"></a>Cloud Computing ?</h2><p>Cloud computing is the on-demand delivery of compute power, database, storage, applications, and other IT resources through a cloud services platform via the internet with pay-as-you-go pricing.</p><p>Cloud computing provides a simple way to access servers, storage, databases and a broad set of application services over the internet.</p><h3 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a><strong>Advantages</strong></h3><ul><li><strong>Trade fixed expense for variable expense</strong></li><li><strong>Benefit from massive economies of scale</strong></li><li><strong>Stop guessing capacity</strong> </li><li><strong>Increase speed and agility</strong></li><li><strong>Stop spending money running and maintaining data centers</strong> </li><li><strong>Go global in minutes</strong></li></ul><h2 id="AWS-Global-Infrastructure"><a href="#AWS-Global-Infrastructure" class="headerlink" title="AWS Global Infrastructure"></a>AWS Global Infrastructure</h2><p>The AWS Cloud infrastructure is built around <strong>AWS Regions</strong> and <strong>Availability Zones</strong>. </p><p>An AWS Region is a physical location in the world which has multiple Availability Zones.</p><p>Availability Zones consist of one or more discrete data centers, each with redundant power, networking, and connectivity, housed in separate facilities. These Availability Zones offer you the ability to operate production applications and databases that are more highly available, fault tolerant, and scalable than would be possible from a single data center.</p><p><img src="/img/AWS-Basic/image-20240219160453628.png" alt="image-20240219160453628"></p><h3 id="AWS-Region-considerations"><a href="#AWS-Region-considerations" class="headerlink" title="AWS Region considerations"></a>AWS Region considerations</h3><p><img src="/img/AWS-Basic/image-20240219161112081.png" alt="image-20240219161112081"></p><h3 id="Maintain-Resiliency"><a href="#Maintain-Resiliency" class="headerlink" title="Maintain Resiliency"></a>Maintain Resiliency</h3><p>To keep the application available, you need to maintain high availability and resiliency. A well-known best practice for cloud architecture is to use Region-scoped, managed services. These services come with availability and resiliency built in. When that is not possible, make sure the workload is replicated across multiple AZs. At a minimum, you should use two AZs. If one entire AZ fails, your application will have infrastructure up and running in at least a second AZ to take over the traffic.</p><h2 id="AWS-Cloud-Security"><a href="#AWS-Cloud-Security" class="headerlink" title="AWS Cloud Security"></a>AWS Cloud Security</h2><p>The AWS Cloud enables a shared responsibility model. While AWS manages security <strong>of</strong> the cloud, you are responsible for security <strong>in</strong> the cloud. This means that you retain control of the security you choose to implement to protect your own content, platform, applications, systems, and networks no differently than you would in an on-site data center.</p><p><img src="/img/AWS-Basic/image-20240219161532026.png" alt="image-20240219161532026"></p><p><img src="/img/AWS-Basic/image-20240219161747050.png" alt="image-20240219161747050"></p><h3 id="Protect-the-AWS-Root-User"><a href="#Protect-the-AWS-Root-User" class="headerlink" title="Protect the AWS Root User"></a>Protect the AWS Root User</h3><h4 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication?"></a>Authentication?</h4><p>If the user types in the correct email and password, the system assumes the user is allowed to enter and grants them access. This is the process of <em><strong>authentication</strong></em>. Authentication ensures that the user is who they say they are.</p><h4 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization?"></a>Authorization?</h4><p>Authorization is the process of giving users permission to access AWS resources and services. Authorization determines whether the user can perform an action.</p><h4 id="AWS-Root-User"><a href="#AWS-Root-User" class="headerlink" title="AWS Root User"></a>AWS Root User</h4><p>When you first create an AWS account, you begin with a single sign-in identity that has complete access to all AWS services and resources in the account. This identity is called the AWS root user and is accessed by signing in with the email address and password that you used to create the account.</p><h4 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h4><ul><li>Choose a strong password for the root user.</li><li>Never share your root user password or access keys with anyone.</li><li>Disable or delete the access keys associated with the root user.</li><li>Do not use the root user for administrative tasks or everyday tasks.</li><li><em><strong>Use Multi-Factor Authentication(MFA)</strong></em></li></ul><h2 id="AWS-Identity-and-Access-Management-IAM"><a href="#AWS-Identity-and-Access-Management-IAM" class="headerlink" title="AWS Identity and Access Management(IAM)"></a>AWS Identity and Access Management(IAM)</h2><img src="/img/AWS-Basic/image-20240220204907737.png" alt="image-20240220204907737" style="zoom:50%;" /><p><img src="/img/AWS-Basic/image-20240220205055568.png" alt="image-20240220205055568"></p><h3 id="IAM-USER"><a href="#IAM-USER" class="headerlink" title="IAM USER?"></a>IAM USER?</h3><p>An IAM user represents a person or service that interacts with AWS. You define the user within your AWS account. Once you create a user, that user can sign in to gain access to the AWS resources inside your account.</p><h3 id="IAM-GROUP"><a href="#IAM-GROUP" class="headerlink" title="IAM GROUP?"></a>IAM GROUP?</h3><p>An IAM group is a collection of users. All users in the group inherit the permissions assigned to the group. It’s a more convenient and scalable way of managing permissions for users in your AWS account. This is why using IAM groups is a best practice.</p><h3 id="IAM-POLICY"><a href="#IAM-POLICY" class="headerlink" title="IAM POLICY?"></a>IAM POLICY?</h3><p>To manage access and provide permissions to AWS services and resources, you create IAM policies and attach them to IAM users, groups, and roles. </p><h2 id="IAM-ROLES"><a href="#IAM-ROLES" class="headerlink" title="IAM ROLES"></a>IAM ROLES</h2><p><img src="/img/AWS-Basic/image-20240220205902662.png" alt="image-20240220205902662"></p><p><strong>FEATURES</strong></p><img src="/img/AWS-Basic/image-20240220210110295.png" alt="image-20240220210110295" style="zoom:67%;" /><p><img src="/img/AWS-Basic/image-20240220210205538.png" alt="image-20240220210205538"></p><h3 id="Role-Based-Access-in-AWS"><a href="#Role-Based-Access-in-AWS" class="headerlink" title="Role Based Access in AWS"></a>Role Based Access in AWS</h3><ul><li><p>LOCK DOWN THE AWS ROOT USER</p><ul><li>Don’t share the credentials associated with the root user.</li><li>Consider deleting the root user access keys.</li><li>Enable MFA on the root account.</li></ul></li><li><p>FOLLOW THE PRINCIPLE OF LEAST PRIVILEGE</p></li><li><p>USE <strong>IAM ROLES</strong> WHEN POSSIBLE</p></li><li><p>CONSIDER USING AN IDENTITY PROVIDER(idP)</p></li></ul><h2 id="AWS-Compute"><a href="#AWS-Compute" class="headerlink" title="AWS Compute"></a>AWS Compute</h2><h3 id="Amazon-Elastic-Compute-Cloud"><a href="#Amazon-Elastic-Compute-Cloud" class="headerlink" title="Amazon Elastic Compute Cloud"></a>Amazon Elastic Compute Cloud</h3><p><img src="/img/AWS-Basic/J8AK7AJ5Rd-CJYWBoshBqg_cb704f22a39746e398bff9b1838c91f1_image.png" alt="img"></p><p>Amazon EC2 is a web service that provides secure, resizable compute capacity in the cloud. It allows you to provision virtual servers called EC2 instances. </p><p>When launching an EC2 instance, the first setting you configure is which operating system you want by selecting an Amazon Machine Image (AMI).</p><blockquote><p>In the AWS Cloud, operating system installation is instead built into the AMI that you choose. Not only does an AMI let you configure which operating system you want, you can also select storage mappings, the architecture type, and additional software installed.</p></blockquote><p><img src="/img/AWS-Basic/VBk76PGITdKLGz9RPTGtXw_16b6431eb1354ab889f7433d964da9f1_image.png" alt="img"></p><p><img src="/img/AWS-Basic/rGO-wfxDSs6pvOl6I3QaYQ_28d2e58cdf33439bb53d1af93d907cf1_image.png" alt="img"></p><p>you can create an AMI from your running instance and use this AMI to start a new instance. This way, your new instance will have all the same configurations as your current instance, because the configurations set in the AMIs are the same.</p><p><img src="/img/AWS-Basic/image-20240220220310127.png" alt="image-20240220220310127"></p><p>When you <em><strong>stop</strong></em> your instance, the data stored in memory (RAM) is lost.</p><p>When you <em><strong>stop-hibernate</strong></em> your instance, AWS signals the operating system to perform hibernation (suspend-to-disk), which saves the contents from the instance memory (RAM) to the Amazon EBS root volume. </p><h4 id="On-Demand-Instances"><a href="#On-Demand-Instances" class="headerlink" title="On-Demand Instances"></a>On-Demand Instances</h4><p>With <em>On-Demand</em> instances, you pay for compute capacity with no long-term commitments. Billing begins whenever the instance is running, and billing stops when the instance is in a stopped or terminated state. The price per second for a running On-Demand instance is fixed.</p><h4 id="Reserved-Instances-RIs"><a href="#Reserved-Instances-RIs" class="headerlink" title="Reserved Instances (RIs)"></a>Reserved Instances (RIs)</h4><p>RIs provide you with a significant discount compared to On-Demand instance pricing. RIs provide a discounted hourly rate and an optional capacity reservation for EC2 instances.</p><h3 id="Container-Services-on-AWS"><a href="#Container-Services-on-AWS" class="headerlink" title="Container Services on AWS"></a>Container Services on AWS</h3>]]></content>
    
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>Cloud</tag>
      
      <tag>Certificate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/04/29/hello-world/"/>
    <url>/2024/04/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
