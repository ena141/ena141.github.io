<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>AWS Basic</title>
    <link href="/2024/04/29/AWS-Basic/"/>
    <url>/2024/04/29/AWS-Basic/</url>
    
    <content type="html"><![CDATA[<h2 id="Cloud-Computing"><a href="#Cloud-Computing" class="headerlink" title="Cloud Computing ?"></a>Cloud Computing ?</h2><p>Cloud computing is the on-demand delivery of compute power, database, storage, applications, and other IT resources through a cloud services platform via the internet with pay-as-you-go pricing.</p><p>Cloud computing provides a simple way to access servers, storage, databases and a broad set of application services over the internet.</p><h3 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a><strong>Advantages</strong></h3><ul><li><strong>Trade fixed expense for variable expense</strong></li><li><strong>Benefit from massive economies of scale</strong></li><li><strong>Stop guessing capacity</strong> </li><li><strong>Increase speed and agility</strong></li><li><strong>Stop spending money running and maintaining data centers</strong> </li><li><strong>Go global in minutes</strong></li></ul><h2 id="AWS-Global-Infrastructure"><a href="#AWS-Global-Infrastructure" class="headerlink" title="AWS Global Infrastructure"></a>AWS Global Infrastructure</h2><p>The AWS Cloud infrastructure is built around <strong>AWS Regions</strong> and <strong>Availability Zones</strong>. </p><p>An AWS Region is a physical location in the world which has multiple Availability Zones.</p><p>Availability Zones consist of one or more discrete data centers, each with redundant power, networking, and connectivity, housed in separate facilities. These Availability Zones offer you the ability to operate production applications and databases that are more highly available, fault tolerant, and scalable than would be possible from a single data center.</p><p><img src="/img/AWS-Basic/image-20240219160453628.png" alt="image-20240219160453628"></p><h3 id="AWS-Region-considerations"><a href="#AWS-Region-considerations" class="headerlink" title="AWS Region considerations"></a>AWS Region considerations</h3><p><img src="/img/AWS-Basic/image-20240219161112081.png" alt="image-20240219161112081"></p><h3 id="Maintain-Resiliency"><a href="#Maintain-Resiliency" class="headerlink" title="Maintain Resiliency"></a>Maintain Resiliency</h3><p>To keep the application available, you need to maintain high availability and resiliency. A well-known best practice for cloud architecture is to use Region-scoped, managed services. These services come with availability and resiliency built in. When that is not possible, make sure the workload is replicated across multiple AZs. At a minimum, you should use two AZs. If one entire AZ fails, your application will have infrastructure up and running in at least a second AZ to take over the traffic.</p><h2 id="AWS-Cloud-Security"><a href="#AWS-Cloud-Security" class="headerlink" title="AWS Cloud Security"></a>AWS Cloud Security</h2><p>The AWS Cloud enables a shared responsibility model. While AWS manages security <strong>of</strong> the cloud, you are responsible for security <strong>in</strong> the cloud. This means that you retain control of the security you choose to implement to protect your own content, platform, applications, systems, and networks no differently than you would in an on-site data center.</p><p><img src="/img/AWS-Basic/image-20240219161532026.png" alt="image-20240219161532026"></p><p><img src="/img/AWS-Basic/image-20240219161747050.png" alt="image-20240219161747050"></p><h3 id="Protect-the-AWS-Root-User"><a href="#Protect-the-AWS-Root-User" class="headerlink" title="Protect the AWS Root User"></a>Protect the AWS Root User</h3><h4 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication?"></a>Authentication?</h4><p>If the user types in the correct email and password, the system assumes the user is allowed to enter and grants them access. This is the process of <em><strong>authentication</strong></em>. Authentication ensures that the user is who they say they are.</p><h4 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization?"></a>Authorization?</h4><p>Authorization is the process of giving users permission to access AWS resources and services. Authorization determines whether the user can perform an action.</p><h4 id="AWS-Root-User"><a href="#AWS-Root-User" class="headerlink" title="AWS Root User"></a>AWS Root User</h4><p>When you first create an AWS account, you begin with a single sign-in identity that has complete access to all AWS services and resources in the account. This identity is called the AWS root user and is accessed by signing in with the email address and password that you used to create the account.</p><h4 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h4><ul><li>Choose a strong password for the root user.</li><li>Never share your root user password or access keys with anyone.</li><li>Disable or delete the access keys associated with the root user.</li><li>Do not use the root user for administrative tasks or everyday tasks.</li><li><em><strong>Use Multi-Factor Authentication(MFA)</strong></em></li></ul><h2 id="AWS-Identity-and-Access-Management-IAM"><a href="#AWS-Identity-and-Access-Management-IAM" class="headerlink" title="AWS Identity and Access Management(IAM)"></a>AWS Identity and Access Management(IAM)</h2><img src="/img/AWS-Basic/image-20240220204907737.png" alt="image-20240220204907737" style="zoom:50%;" /><p><img src="/img/AWS-Basic/image-20240220205055568.png" alt="image-20240220205055568"></p><h3 id="IAM-USER"><a href="#IAM-USER" class="headerlink" title="IAM USER?"></a>IAM USER?</h3><p>An IAM user represents a person or service that interacts with AWS. You define the user within your AWS account. Once you create a user, that user can sign in to gain access to the AWS resources inside your account.</p><h3 id="IAM-GROUP"><a href="#IAM-GROUP" class="headerlink" title="IAM GROUP?"></a>IAM GROUP?</h3><p>An IAM group is a collection of users. All users in the group inherit the permissions assigned to the group. It’s a more convenient and scalable way of managing permissions for users in your AWS account. This is why using IAM groups is a best practice.</p><h3 id="IAM-POLICY"><a href="#IAM-POLICY" class="headerlink" title="IAM POLICY?"></a>IAM POLICY?</h3><p>To manage access and provide permissions to AWS services and resources, you create IAM policies and attach them to IAM users, groups, and roles. </p><h2 id="IAM-ROLES"><a href="#IAM-ROLES" class="headerlink" title="IAM ROLES"></a>IAM ROLES</h2><p><img src="/img/AWS-Basic/image-20240220205902662.png" alt="image-20240220205902662"></p><p><strong>FEATURES</strong></p><img src="/img/AWS-Basic/image-20240220210110295.png" alt="image-20240220210110295" style="zoom:67%;" /><p><img src="/img/AWS-Basic/image-20240220210205538.png" alt="image-20240220210205538"></p><h3 id="Role-Based-Access-in-AWS"><a href="#Role-Based-Access-in-AWS" class="headerlink" title="Role Based Access in AWS"></a>Role Based Access in AWS</h3><ul><li><p>LOCK DOWN THE AWS ROOT USER</p><ul><li>Don’t share the credentials associated with the root user.</li><li>Consider deleting the root user access keys.</li><li>Enable MFA on the root account.</li></ul></li><li><p>FOLLOW THE PRINCIPLE OF LEAST PRIVILEGE</p></li><li><p>USE <strong>IAM ROLES</strong> WHEN POSSIBLE</p></li><li><p>CONSIDER USING AN IDENTITY PROVIDER(idP)</p></li></ul><h2 id="AWS-Compute"><a href="#AWS-Compute" class="headerlink" title="AWS Compute"></a>AWS Compute</h2><h3 id="Amazon-Elastic-Compute-Cloud"><a href="#Amazon-Elastic-Compute-Cloud" class="headerlink" title="Amazon Elastic Compute Cloud"></a>Amazon Elastic Compute Cloud</h3><p><img src="/img/AWS-Basic/J8AK7AJ5Rd-CJYWBoshBqg_cb704f22a39746e398bff9b1838c91f1_image.png" alt="img"></p><p>Amazon EC2 is a web service that provides secure, resizable compute capacity in the cloud. It allows you to provision virtual servers called EC2 instances. </p><p>When launching an EC2 instance, the first setting you configure is which operating system you want by selecting an Amazon Machine Image (AMI).</p><blockquote><p>In the AWS Cloud, operating system installation is instead built into the AMI that you choose. Not only does an AMI let you configure which operating system you want, you can also select storage mappings, the architecture type, and additional software installed.</p></blockquote><p><img src="/img/AWS-Basic/VBk76PGITdKLGz9RPTGtXw_16b6431eb1354ab889f7433d964da9f1_image.png" alt="img"></p><p><img src="/img/AWS-Basic/rGO-wfxDSs6pvOl6I3QaYQ_28d2e58cdf33439bb53d1af93d907cf1_image.png" alt="img"></p><p>you can create an AMI from your running instance and use this AMI to start a new instance. This way, your new instance will have all the same configurations as your current instance, because the configurations set in the AMIs are the same.</p><p><img src="/img/AWS-Basic/image-20240220220310127.png" alt="image-20240220220310127"></p><p>When you <em><strong>stop</strong></em> your instance, the data stored in memory (RAM) is lost.</p><p>When you <em><strong>stop-hibernate</strong></em> your instance, AWS signals the operating system to perform hibernation (suspend-to-disk), which saves the contents from the instance memory (RAM) to the Amazon EBS root volume. </p><h4 id="On-Demand-Instances"><a href="#On-Demand-Instances" class="headerlink" title="On-Demand Instances"></a>On-Demand Instances</h4><p>With <em>On-Demand</em> instances, you pay for compute capacity with no long-term commitments. Billing begins whenever the instance is running, and billing stops when the instance is in a stopped or terminated state. The price per second for a running On-Demand instance is fixed.</p><h4 id="Reserved-Instances-RIs"><a href="#Reserved-Instances-RIs" class="headerlink" title="Reserved Instances (RIs)"></a>Reserved Instances (RIs)</h4><p>RIs provide you with a significant discount compared to On-Demand instance pricing. RIs provide a discounted hourly rate and an optional capacity reservation for EC2 instances.</p><h3 id="Container-Services-on-AWS"><a href="#Container-Services-on-AWS" class="headerlink" title="Container Services on AWS"></a>Container Services on AWS</h3>]]></content>
    
    
    
    <tags>
      
      <tag>AWS</tag>
      
      <tag>Cloud</tag>
      
      <tag>Certificate</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/04/29/hello-world/"/>
    <url>/2024/04/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
